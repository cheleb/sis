# Asserttion : the statement has not been found opened by this connection when it was searched for.
#0 : the statement that should had been found opened by this connection.
#1 : The connection.
assert.statement_not_opened_by_me=[Internal API trouble] The Statement {0} has not been opened by the connection {1}.  

# Exception thrown if the connection is closed 
#0 : DBF File name.
excp.closed_connection=The connection to the DBase 3 file {0} is closed.

# Exception : a directory has been given instead of a file.
#0 : Directory name.
excp.directory_not_expected=Your file ''{0}'' points to a directory instead of a file. 

# Exception : the file has not been found.
#0 : File that has not been found.
excp.file_not_found=The DBF file ''{0}'' has not been found.

# Warning : autocommit isn't implemented.
#0 : true / false.
log.autocommit_ignored=The autocommit {0} is currently ignored (not implemented) : autocommit is always true.

# Warning : commit and rollback are not implemented : autocommit is always true.
log.commit_rollback_ignored=Commit and rollback has no effect (currently not implemented) : autocommit is always true.

# Information : Connection opened.
#0 : DBF File opened.
#1 : Header information.
log.database_connection_opened=Database connection to {0} opened. DBase 3 descriptor of this dbf file is : {1}.

# Warning : At the time the caller is closing this connection, he has left some statements opened.
#0, number : Number of statements that are left opened.
#1 : Opened statements.
log.statements_left_opened={0,number,integer} {0,choice,1#statement is|2#statements are} left opened at the time you are closing this connection : {1}.

# toString()
#0 : Database file.
#1 : Open state (true, false).
toString='{'{0}, connection open state : {1}'}'
